% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/noty.R, R/use.R
\name{noty}
\alias{noty}
\alias{noty_close}
\alias{use_noty}
\title{Notification with noty.js}
\usage{
noty(
  text,
  timeout = getOption("noty.timeout", default = 2000),
  type = c("info", "alert", "success", "error", "warning"),
  layout = c("topRight", "top", "topLeft", "topCenter", "center", "centerLeft",
    "centerRight", "bottom", "bottomLeft", "bottomCenter", "bottomRight"),
  theme = getOption("noty.theme", default = "sunset"),
  modal = FALSE,
  killer = FALSE,
  animation_open = NULL,
  animation_close = NULL,
  session = shiny::getDefaultReactiveDomain()
)

noty_close(session = shiny::getDefaultReactiveDomain())

use_noty(maxVisible = 5)
}
\arguments{
\item{text}{Text to display.}

\item{timeout}{Delay for closing notification in milliseconds (ms).
Set \code{FALSE} for sticky notifications.}

\item{type}{Type of notification: \code{"alert"}, \code{"success"}, \code{"error"}, \code{"warning"}, \code{"info"}.}

\item{layout}{Position among : \code{"top"}, \code{"topLeft"}, \code{"topCenter"},
\code{"topRight"}, \code{"center"}, \code{"centerLeft"}, \code{"centerRight"},
\code{"bottom"}, \code{"bottomLeft"}, \code{"bottomCenter"}, "\code{"bottomRight"}.}

\item{theme}{Theme to use between : \code{"mint"}, \code{"sunset"}, \code{"relax"}, \code{"nest"}, \code{"metroui"},
\code{"semanticui"}, \code{"light"}, \code{"bootstrap-v3"}, \code{"bootstrap-v4"}.}

\item{modal}{Add an overlay to the page to emphasis notification.}

\item{killer}{Close all others notification before opening.}

\item{animation_open, animation_close}{Animation effect, use \code{\link{animations}}.}

\item{session}{Shiny session.}

\item{maxVisible}{Maximum number of notifications that can appear at a time.}
}
\description{
Initialize with \code{use_noty} in UI before using \code{noty} server-side.
 Close all notifications with \code{noty_close}.
}
\examples{
library(shiny)
library(shinypop)

ui <- fluidPage(
  tags$h2("noty example"),
  use_noty(),
  radioButtons(
    inputId = "type",
    label = "Type:",
    choices = c("info", "alert",
                "success", "error",
                "warning"),
    inline = TRUE
  ),
  radioButtons(
    inputId = "layout",
    label = "Layout:",
    choices = c("topRight", "top",
                "topLeft", "topCenter",
                "center", "centerLeft",
                "centerRight", "bottom",
                "bottomLeft", "bottomCenter",
                "bottomRight"),
    inline = TRUE
  ),
  radioButtons(
    inputId = "theme",
    label = "Theme:",
    choices = c("mint", "sunset",
                "relax", "nest",
                "metroui", "semanticui",
                "light", "bootstrap-v3",
                "bootstrap-v4"),
    inline = TRUE
  ),
  checkboxInput(
    inputId = "killer",
    label = "Killer",
    value = FALSE
  ),
  checkboxInput(
    inputId = "modal",
    label = "Modal",
    value = FALSE
  ),
  actionButton(
    inputId = "show",
    label = "Show notification",
    width = "100\%"
  )
)

server <- function(input, output, session) {
  
  observeEvent(input$show, {
    noty(
      text = "Hello world!",
      type = input$type,
      layout = input$layout,
      theme = input$theme,
      modal = input$modal,
      killer = input$killer
    )
  })
  
}

if (interactive()) 
  shinyApp(ui, server)
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/favico.R, R/use.R
\name{favico}
\alias{favico}
\alias{use_favico}
\title{Notification with favico.js}
\usage{
favico(value, animation = c("pop", "slide", "fade", "popFade", "none"),
  position = c("up", "down", "left", "upleft"), type = c("circle",
  "rectangle"), bgColor = "#d00", textColor = "#fff",
  session = shiny::getDefaultReactiveDomain())

use_favico(img = NULL)
}
\arguments{
\item{value}{Number to display on favicon.}

\item{animation}{Animation to use : pop, slide, fade, popFade or none.}

\item{position}{Position : ip, down, left or upleft.}

\item{type}{Shape : circle or rectangle.}

\item{bgColor}{Background color.}

\item{textColor}{Text color.}

\item{session}{Shiny session.}

\item{img}{Path to an image (file should be located in www folder).
Default is to used Shiny logo.}
}
\description{
Display a badge in your favicon (displayed in the tab of a browser).
}
\examples{
if (interactive()) {
  
  library(shiny)
  
  ui <- fluidPage(
    use_favico(),
    actionButton("minus", "-1"),
    actionButton("plus", "+1")
  )
  
  server <- function(input, output, session) {
    
    value <- reactiveVal(0) 
    
    observeEvent(input$minus, {
      newValue <- value() - 1
      value(newValue)
    })
    
    observeEvent(input$plus, {
      newValue <- value() + 1
      value(newValue)
    })
    
    observeEvent(value(), {
      favico(value())
    })
  }
  
  shinyApp(ui, server)
  
}
}
